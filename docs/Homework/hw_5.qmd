---
title: "HW 5"
author: "Ella Addink"
format: html
embed-resources: true
code-tools: true 
---

## Exercise 1

![[Graphic found here](https://r-graph-gallery.com/web-ridgeline-plot-with-inside-plot-and-annotations.html)](san_fran_rent_graphic.png){width="70%"}

1.  What marks are being used? What variables are mapped to which properties?

    -   A "point" mark is used to show the median rent for houses within each adjective group, with rent mapped to the x position and adjective mapped to the y position.

    -   A "rule" mark is used to show the median rent across all houses/apartments, with rent mapped to the x position.

    -   A "bar" mark is used to show the distribution of rent prices within each adjective group, with rent mapped to the x position, adjective mapped to the y position, and percentile category mapped to color.

    -   An "area" mark is also used to show the distribution of rent prices with rent mapped to the x position and density/count mapped to a secondary y position within each adjective group.

    -   A "text" mark is used to show the average number of bedrooms for each adjective, with adjective mapped to the (main) y position.

2.  What is the main story of this graphic?

    The graphic suggests a possible relationships between the adjectives used in rental listings and the rent prices in the San Francisco Bay Area. It appears that certain descriptors such as "nice" and "clean" are associated with relatively lower median rents while others like "gorgeous" and "furnished" appear more in listings with higher rents.

3.  What makes it a good graphic?

    This graphic does well at combining multiple layers of information with different mark types. It is easy to see the comparison between rental prices and adjectives used. It is, for the most part, clear and easy to understand. The title, caption, labels, and legend are concise yet informative, and help with interpreting the graphic and scales.

4.  What features do you think you would know how to implement in Vega-Lite?

    I think I would be able to create the x and y axes and the layers with the points, rule, and text marks. I could make horizontal bars but I am not sure what to use to show percentiles like the graphic does. I could make the density/area plots for the rents and I could facet by adjective. It would probably take a lot of tweaking to get the facets to be the right size and line up nicely like they are in the graphic.

5.  Are there any features of the graphic that you would not know how to do in Vega-Lite? If so, list them.

    I am not sure how to create the percentile groups used for the bars in the graphic. Maybe I would have to use transformations to create new variables for the percentiles. I am a little unsure about how I would get everything placed correctly such as positioning the number of bedrooms to the left of the bars, but with enough playing around with the scale/range, it would probably be possible. I am not sure how to create the legend as vega-lite would not automatically generate a legend with a whole "example" area and bar plot. I am guessing the legend would need to be a whole additional graphic itself with a smaller size and fine-tuned position, but I am not sure exactly how this would play out. I also would need to look into how to make the arrows and labels in the legend.

## Exercise 2

```{r warning = FALSE, include = FALSE}
library(vegawidget)
```

#### Exercise 1 from the slides

1.  Create a graphic that shows the high temperature in Seattle each day.

2.  Now modify this so that the temperatures for the same day of the year are overlaid on top of each other for the several years in the data set.

```{r echo = FALSE}
'
{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "data": {
    "url": "https://calvin-data304.netlify.app/data/weather-with-dates.csv"},
  "width": 500,
  "height": 300,
  "title": "Daily High Temperature in Seattle (2012-2015)",
  "mark": "area",
  "transform": [
    {"filter": {"field": "location", "equal": "Seattle"}},
    {"calculate": "datetime(datum.year, datum.month, datum.day)", "as": "converted_date"}, 
    {"calculate": "datum.temp_max*(1.8) + 32", "as": "temp_max_f"}
  ],
  "encoding": {
    "x": {"field": "converted_date", "timeUnit": "monthdate", "type": "temporal", 
    "title": "Date"}, 
    "y": {"aggregate": "max", "field": "temp_max_f", "type": "quantitative", 
    "title": "High Temperature in Fahrenheit"},
    "y2": {"aggregate": "min", "field": "temp_max_f", "type": "quantitative"},
    "color": {"value": "purple"}
}
}' |> as_vegaspec()
```

#### Exercise 3 from the slides

Create a graphic that shows how the different types of weather (rain, fog, etc.) are distributedÂ *by month*Â in Seattle. When is it rainiest in Seattle? Sunniest?

```{r echo = FALSE}
'
{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "data": {"url": "https://calvin-data304.netlify.app/data/weather-with-dates.csv"},
  "width": 500,
  "height": 300,
  "title": "Monthly Weather in Seattle (2012-2015)",
  "params": [
    {
      "name": "weather",
      "value": "sun",
      "bind": {"input": "select", "options": ["sun", "fog", "drizzle", "rain", "snow"], 
      "labels": ["Sun", "Fog", "Drizzle", "Rain", "Snow"]}
    }
  ],
  "transform": [
    {"filter": {"field": "location", "equal": "Seattle"}},
    {"filter": "datum.weather == weather"},
    {"aggregate": [{"op": "count", "as": "days"}], "groupby": ["year", "month"]}
  ],
  "encoding": {
    "x": {"field": "month", "type": "ordinal", "timeUnit": "month", "title": "Month", 
    "scale": {"domain": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", 
    "Sep", "Oct", "Nov", "Dec"]}}
  },

  "layer": [
  {"mark": "rule",
  "encoding": {
    "y": {"field": "days", "aggregate": "max"},
    "y2": {"field": "days", "aggregate": "min"}}
  },

  {"mark": "point",
  "encoding": {
    "y": {"field": "days", "type": "quantitative", "title": "Number of Days", 
    "scale": {"domain": [0, 30]}},
    "color": {"field": "year", "title": "Year", "scale": {"domain": ["2012", 
    "2013", "2014", "2015"]}},
    "fill": {"value": "white"}, 
    "fillOpacity": {"value": 1}}
  }
  ]
}' |> as_vegaspec()
```
